/*
 * MIT License
 *
 * Copyright (c) 2020 rajandev17
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
}

def android_builder_version = "4.0.1"

ext {
    android_builder_main_version = Integer.parseInt(android_builder_version.split("\\.")[0])
    android_builder_mid_version = Integer.parseInt(android_builder_version.split("\\.")[1])
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    this.rootProject.buildscript.configurations.classpath
            .resolvedConfiguration
            .firstLevelModuleDependencies.
            each {
                def name = it.name
                if (name.contains('com.android.tools.build:gradle')) {
                    def moduleVersion = it.moduleVersion
                    if (moduleVersion.contains("-")) {
                        def alphaversionArray = moduleVersion.split("-")[0]
                        def versionArray = alphaversionArray.toString().split("\\.")
                        ext.android_builder_main_version = Integer.parseInt(versionArray[0])
                        ext.android_builder_mid_version = Integer.parseInt(versionArray[1])
                    } else {
                        version = moduleVersion
                        android_builder_version = moduleVersion
                        ext.android_builder_main_version = Integer.parseInt(android_builder_version.split("\\.")[0])
                        ext.android_builder_mid_version = Integer.parseInt(android_builder_version.split("\\.")[1])
                    }
                }
            }
    buildFeatures {
        viewBinding true
    }
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    if (ext.android_builder_main_version >= 7 || (ext.android_builder_main_version > 4 && ext.android_builder_mid_version > 1)) {
        buildFeatures {
            compose true
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion kotlin_version
    }
    kapt {
        generateStubs = true
    }
    sourceSets {
        getByName("androidTest") {
            java.srcDir("src/androidTest/java")
        }

        getByName("main") {
            java.srcDir("src/main/java")
            java.srcDir("src/main/kotlin")
        }
    }
}

dependencies {
    testImplementation "junit:junit:4.13.1"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    //kotlin
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api "androidx.core:core-ktx:1.3.2"

    //design
    api "com.google.android.material:material:1.2.1"

    //compose
    if (android_builder_main_version < 7) {
        add("kotlinCompilerPluginClasspath", "androidx.compose.compiler:compiler:$compose_version")
    }
    api "androidx.appcompat:appcompat:$compose_appcompat_version"
    api "androidx.activity:activity-compose:$compose_activity_version"
    api "androidx.compose.ui:ui:$compose_version"
    api "androidx.compose.material:material:$compose_version"
    api "androidx.compose.ui:ui-tooling:$compose_version"
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    api "androidx.compose.runtime:runtime-livedata:$compose_version"
    api "androidx.compose.material:material-icons-extended:$compose_version"
    //lifecycle
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions_version"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    //retrofit
    api "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.13.1"

    //preferences
    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha02"

    //image transformations and loading
    api "com.flaviofaria:kenburnsview:1.0.7"
    api "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_jetpack_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_jetpack_version"
    kaptAndroidTest "androidx.hilt:hilt-compiler:$hilt_jetpack_version"
}